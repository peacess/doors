// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package idl

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type MessageHeader struct {
	_tab flatbuffers.Struct
}

func (rcv *MessageHeader) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MessageHeader) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *MessageHeader) Version() int16 {
	return rcv._tab.GetInt16(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *MessageHeader) MutateVersion(n int16) bool {
	return rcv._tab.MutateInt16(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *MessageHeader) ToId(obj *Int128_8) *Int128_8 {
	if obj == nil {
		obj = new(Int128_8)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+2)
	return obj
}
func (rcv *MessageHeader) FromId(obj *Int128_8) *Int128_8 {
	if obj == nil {
		obj = new(Int128_8)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+10)
	return obj
}

func CreateMessageHeader(builder *flatbuffers.Builder, version int16, to_id_i1 int8, to_id_i2 int8, to_id_i3 int8, to_id_i4 int8, to_id_i5 int8, to_id_i6 int8, to_id_i7 int8, to_id_i8 int8, from_id_i1 int8, from_id_i2 int8, from_id_i3 int8, from_id_i4 int8, from_id_i5 int8, from_id_i6 int8, from_id_i7 int8, from_id_i8 int8) flatbuffers.UOffsetT {
	builder.Prep(2, 18)
	builder.Prep(1, 8)
	builder.PrependInt8(from_id_i8)
	builder.PrependInt8(from_id_i7)
	builder.PrependInt8(from_id_i6)
	builder.PrependInt8(from_id_i5)
	builder.PrependInt8(from_id_i4)
	builder.PrependInt8(from_id_i3)
	builder.PrependInt8(from_id_i2)
	builder.PrependInt8(from_id_i1)
	builder.Prep(1, 8)
	builder.PrependInt8(to_id_i8)
	builder.PrependInt8(to_id_i7)
	builder.PrependInt8(to_id_i6)
	builder.PrependInt8(to_id_i5)
	builder.PrependInt8(to_id_i4)
	builder.PrependInt8(to_id_i3)
	builder.PrependInt8(to_id_i2)
	builder.PrependInt8(to_id_i1)
	builder.PrependInt16(version)
	return builder.Offset()
}
