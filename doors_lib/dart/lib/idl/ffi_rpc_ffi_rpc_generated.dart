// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable, constant_identifier_names

library ffi_rpc;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;

class FfiRpcHeader {
  FfiRpcHeader._(this._bc, this._bcOffset);

  static const fb.Reader<FfiRpcHeader> reader = _FfiRpcHeaderReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get headerType => const fb.Uint32Reader().read(_bc, _bcOffset + 0);
  int get rpcType => const fb.Uint32Reader().read(_bc, _bcOffset + 4);
  int get len => const fb.Uint64Reader().read(_bc, _bcOffset + 8);

  @override
  String toString() {
    return 'FfiRpcHeader{headerType: ${headerType}, rpcType: ${rpcType}, len: ${len}}';
  }

  FfiRpcHeaderT unpack() => FfiRpcHeaderT(headerType: headerType, rpcType: rpcType, len: len);

  static int pack(fb.Builder fbBuilder, FfiRpcHeaderT? object) {
    if (object == null) return 0;
    return object.pack(fbBuilder);
  }
}

class FfiRpcHeaderT implements fb.Packable {
  int headerType;
  int rpcType;
  int len;

  FfiRpcHeaderT({required this.headerType, required this.rpcType, required this.len});

  @override
  int pack(fb.Builder fbBuilder) {
    fbBuilder.putUint64(len);
    fbBuilder.putUint32(rpcType);
    fbBuilder.putUint32(headerType);
    return fbBuilder.offset;
  }

  @override
  String toString() {
    return 'FfiRpcHeaderT{headerType: ${headerType}, rpcType: ${rpcType}, len: ${len}}';
  }
}

class _FfiRpcHeaderReader extends fb.StructReader<FfiRpcHeader> {
  const _FfiRpcHeaderReader();

  @override
  int get size => 16;

  @override
  FfiRpcHeader createObject(fb.BufferContext bc, int offset) => FfiRpcHeader._(bc, offset);
}

class FfiRpcHeaderBuilder {
  FfiRpcHeaderBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  int finish(int headerType, int rpcType, int len) {
    fbBuilder.putUint64(len);
    fbBuilder.putUint32(rpcType);
    fbBuilder.putUint32(headerType);
    return fbBuilder.offset;
  }
}

class FfiRpcHeaderObjectBuilder extends fb.ObjectBuilder {
  final int _headerType;
  final int _rpcType;
  final int _len;

  FfiRpcHeaderObjectBuilder({required int headerType, required int rpcType, required int len}) : _headerType = headerType, _rpcType = rpcType, _len = len;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.putUint64(_len);
    fbBuilder.putUint32(_rpcType);
    fbBuilder.putUint32(_headerType);
    return fbBuilder.offset;
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
