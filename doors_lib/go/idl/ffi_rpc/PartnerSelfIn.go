// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package ffi_rpc

import (
	flatbuffers "github.com/google/flatbuffers/go"

	base "github.com/peacess/doors/doors_lib/go/idl/base"
)

type PartnerSelfInT struct {
	Id *base.UlidBytesT `json:"id"`
}

func (t *PartnerSelfInT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	PartnerSelfInStart(builder)
	idOffset := t.Id.Pack(builder)
	PartnerSelfInAddId(builder, idOffset)
	return PartnerSelfInEnd(builder)
}

func (rcv *PartnerSelfIn) UnPackTo(t *PartnerSelfInT) {
	t.Id = rcv.Id(nil).UnPack()
}

func (rcv *PartnerSelfIn) UnPack() *PartnerSelfInT {
	if rcv == nil {
		return nil
	}
	t := &PartnerSelfInT{}
	rcv.UnPackTo(t)
	return t
}

type PartnerSelfIn struct {
	_tab flatbuffers.Table
}

func GetRootAsPartnerSelfIn(buf []byte, offset flatbuffers.UOffsetT) *PartnerSelfIn {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &PartnerSelfIn{}
	x.Init(buf, n+offset)
	return x
}

func FinishPartnerSelfInBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsPartnerSelfIn(buf []byte, offset flatbuffers.UOffsetT) *PartnerSelfIn {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &PartnerSelfIn{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedPartnerSelfInBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *PartnerSelfIn) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *PartnerSelfIn) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *PartnerSelfIn) Id(obj *base.UlidBytes) *base.UlidBytes {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := o + rcv._tab.Pos
		if obj == nil {
			obj = new(base.UlidBytes)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func PartnerSelfInStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func PartnerSelfInAddId(builder *flatbuffers.Builder, id flatbuffers.UOffsetT) {
	builder.PrependStructSlot(0, flatbuffers.UOffsetT(id), 0)
}
func PartnerSelfInEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
