// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package base

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type PartnerId struct {
	_tab flatbuffers.Struct
}

func (rcv *PartnerId) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *PartnerId) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *PartnerId) Low() uint64 {
	return rcv._tab.GetUint64(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *PartnerId) MutateLow(n uint64) bool {
	return rcv._tab.MutateUint64(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *PartnerId) High() uint64 {
	return rcv._tab.GetUint64(rcv._tab.Pos + flatbuffers.UOffsetT(8))
}
func (rcv *PartnerId) MutateHigh(n uint64) bool {
	return rcv._tab.MutateUint64(rcv._tab.Pos+flatbuffers.UOffsetT(8), n)
}

func CreatePartnerId(builder *flatbuffers.Builder, low uint64, high uint64) flatbuffers.UOffsetT {
	builder.Prep(8, 16)
	builder.PrependUint64(high)
	builder.PrependUint64(low)
	return builder.Offset()
}
