// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package idl

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Header struct {
	_tab flatbuffers.Struct
}

func (rcv *Header) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Header) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Header) Len() int32 {
	return rcv._tab.GetInt32(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Header) MutateLen(n int32) bool {
	return rcv._tab.MutateInt32(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Header) Type() FrameType {
	return FrameType(rcv._tab.GetInt16(rcv._tab.Pos + flatbuffers.UOffsetT(4)))
}
func (rcv *Header) MutateType(n FrameType) bool {
	return rcv._tab.MutateInt16(rcv._tab.Pos+flatbuffers.UOffsetT(4), int16(n))
}

func (rcv *Header) Version() int16 {
	return rcv._tab.GetInt16(rcv._tab.Pos + flatbuffers.UOffsetT(6))
}
func (rcv *Header) MutateVersion(n int16) bool {
	return rcv._tab.MutateInt16(rcv._tab.Pos+flatbuffers.UOffsetT(6), n)
}

func (rcv *Header) FromId(obj *UByte16) *UByte16 {
	if obj == nil {
		obj = new(UByte16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+8)
	return obj
}
func (rcv *Header) ToId(obj *UByte16) *UByte16 {
	if obj == nil {
		obj = new(UByte16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+24)
	return obj
}
func (rcv *Header) ForwardId(obj *UByte16) *UByte16 {
	if obj == nil {
		obj = new(UByte16)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+40)
	return obj
}

func CreateHeader(builder *flatbuffers.Builder, len int32, type_ FrameType, version int16, from_id_ub1_ub1 byte, from_id_ub1_ub2 byte, from_id_ub1_ub3 byte, from_id_ub1_ub4 byte, from_id_ub1_ub5 byte, from_id_ub1_ub6 byte, from_id_ub1_ub7 byte, from_id_ub1_ub8 byte, from_id_ub2_ub1 byte, from_id_ub2_ub2 byte, from_id_ub2_ub3 byte, from_id_ub2_ub4 byte, from_id_ub2_ub5 byte, from_id_ub2_ub6 byte, from_id_ub2_ub7 byte, from_id_ub2_ub8 byte, to_id_ub1_ub1 byte, to_id_ub1_ub2 byte, to_id_ub1_ub3 byte, to_id_ub1_ub4 byte, to_id_ub1_ub5 byte, to_id_ub1_ub6 byte, to_id_ub1_ub7 byte, to_id_ub1_ub8 byte, to_id_ub2_ub1 byte, to_id_ub2_ub2 byte, to_id_ub2_ub3 byte, to_id_ub2_ub4 byte, to_id_ub2_ub5 byte, to_id_ub2_ub6 byte, to_id_ub2_ub7 byte, to_id_ub2_ub8 byte, forward_id_ub1_ub1 byte, forward_id_ub1_ub2 byte, forward_id_ub1_ub3 byte, forward_id_ub1_ub4 byte, forward_id_ub1_ub5 byte, forward_id_ub1_ub6 byte, forward_id_ub1_ub7 byte, forward_id_ub1_ub8 byte, forward_id_ub2_ub1 byte, forward_id_ub2_ub2 byte, forward_id_ub2_ub3 byte, forward_id_ub2_ub4 byte, forward_id_ub2_ub5 byte, forward_id_ub2_ub6 byte, forward_id_ub2_ub7 byte, forward_id_ub2_ub8 byte) flatbuffers.UOffsetT {
	builder.Prep(4, 56)
	builder.Prep(1, 16)
	builder.Prep(1, 8)
	builder.PrependByte(forward_id_ub2_ub8)
	builder.PrependByte(forward_id_ub2_ub7)
	builder.PrependByte(forward_id_ub2_ub6)
	builder.PrependByte(forward_id_ub2_ub5)
	builder.PrependByte(forward_id_ub2_ub4)
	builder.PrependByte(forward_id_ub2_ub3)
	builder.PrependByte(forward_id_ub2_ub2)
	builder.PrependByte(forward_id_ub2_ub1)
	builder.Prep(1, 8)
	builder.PrependByte(forward_id_ub1_ub8)
	builder.PrependByte(forward_id_ub1_ub7)
	builder.PrependByte(forward_id_ub1_ub6)
	builder.PrependByte(forward_id_ub1_ub5)
	builder.PrependByte(forward_id_ub1_ub4)
	builder.PrependByte(forward_id_ub1_ub3)
	builder.PrependByte(forward_id_ub1_ub2)
	builder.PrependByte(forward_id_ub1_ub1)
	builder.Prep(1, 16)
	builder.Prep(1, 8)
	builder.PrependByte(to_id_ub2_ub8)
	builder.PrependByte(to_id_ub2_ub7)
	builder.PrependByte(to_id_ub2_ub6)
	builder.PrependByte(to_id_ub2_ub5)
	builder.PrependByte(to_id_ub2_ub4)
	builder.PrependByte(to_id_ub2_ub3)
	builder.PrependByte(to_id_ub2_ub2)
	builder.PrependByte(to_id_ub2_ub1)
	builder.Prep(1, 8)
	builder.PrependByte(to_id_ub1_ub8)
	builder.PrependByte(to_id_ub1_ub7)
	builder.PrependByte(to_id_ub1_ub6)
	builder.PrependByte(to_id_ub1_ub5)
	builder.PrependByte(to_id_ub1_ub4)
	builder.PrependByte(to_id_ub1_ub3)
	builder.PrependByte(to_id_ub1_ub2)
	builder.PrependByte(to_id_ub1_ub1)
	builder.Prep(1, 16)
	builder.Prep(1, 8)
	builder.PrependByte(from_id_ub2_ub8)
	builder.PrependByte(from_id_ub2_ub7)
	builder.PrependByte(from_id_ub2_ub6)
	builder.PrependByte(from_id_ub2_ub5)
	builder.PrependByte(from_id_ub2_ub4)
	builder.PrependByte(from_id_ub2_ub3)
	builder.PrependByte(from_id_ub2_ub2)
	builder.PrependByte(from_id_ub2_ub1)
	builder.Prep(1, 8)
	builder.PrependByte(from_id_ub1_ub8)
	builder.PrependByte(from_id_ub1_ub7)
	builder.PrependByte(from_id_ub1_ub6)
	builder.PrependByte(from_id_ub1_ub5)
	builder.PrependByte(from_id_ub1_ub4)
	builder.PrependByte(from_id_ub1_ub3)
	builder.PrependByte(from_id_ub1_ub2)
	builder.PrependByte(from_id_ub1_ub1)
	builder.PrependInt16(version)
	builder.PrependInt16(int16(type_))
	builder.PrependInt32(len)
	return builder.Offset()
}
