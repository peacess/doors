// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package chat

import (
	flatbuffers "github.com/google/flatbuffers/go"

	base "github.com/peacess/doors/doors_lib/go/idl/base"
)

type ChatTextMessageAck struct {
	_tab flatbuffers.Table
}

func GetRootAsChatTextMessageAck(buf []byte, offset flatbuffers.UOffsetT) *ChatTextMessageAck {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ChatTextMessageAck{}
	x.Init(buf, n+offset)
	return x
}

func FinishChatTextMessageAckBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsChatTextMessageAck(buf []byte, offset flatbuffers.UOffsetT) *ChatTextMessageAck {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ChatTextMessageAck{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedChatTextMessageAckBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *ChatTextMessageAck) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ChatTextMessageAck) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ChatTextMessageAck) Header(obj *base.Header) *base.Header {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := o + rcv._tab.Pos
		if obj == nil {
			obj = new(base.Header)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *ChatTextMessageAck) Message(obj *TextMessageAck) *TextMessageAck {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(TextMessageAck)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func ChatTextMessageAckStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ChatTextMessageAckAddHeader(builder *flatbuffers.Builder, header flatbuffers.UOffsetT) {
	builder.PrependStructSlot(0, flatbuffers.UOffsetT(header), 0)
}
func ChatTextMessageAckAddMessage(builder *flatbuffers.Builder, message flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(message), 0)
}
func ChatTextMessageAckEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
