// automatically generated by the FlatBuffers compiler, do not modify

package netDiscovery

import com.google.flatbuffers.kotlin.*
import kotlin.jvm.JvmInline
@Suppress("unused")
class MySelfFrame : Table() {

    fun init(i: Int, buffer: ReadWriteBuffer) : MySelfFrame = reset(i, buffer)

    val header : base.Header? get() = header(base.Header())
    fun header(obj: base.Header) : base.Header? = lookupField(4, null ) { obj.init(it + bufferPos, bb) }

    val mySelf : netDiscovery.MySelf? get() = mySelf(netDiscovery.MySelf())
    fun mySelf(obj: netDiscovery.MySelf) : netDiscovery.MySelf? = lookupField(6, null ) { obj.init(it + bufferPos, bb) }

    companion object {
        @JvmStatic
        fun validateVersion() = VERSION_2_0_8

        @JvmStatic
        fun asRoot(buffer: ReadWriteBuffer) : MySelfFrame = asRoot(buffer, MySelfFrame())
        @JvmStatic
        fun asRoot(buffer: ReadWriteBuffer, obj: MySelfFrame) : MySelfFrame = obj.init(buffer.getInt(buffer.limit) + buffer.limit, buffer)


        @JvmStatic
        fun startMySelfFrame(builder: FlatBufferBuilder) = builder.startTable(2)

        @JvmStatic
        fun addHeader(builder: FlatBufferBuilder, header: Offset<base.Header>) = builder.addStruct(0, header.value, 0)

        @JvmStatic
        fun addMySelf(builder: FlatBufferBuilder, mySelf: Offset<netDiscovery.MySelf>) = builder.addStruct(1, mySelf.value, 0)

        @JvmStatic
        fun endMySelfFrame(builder: FlatBufferBuilder) : Offset<MySelfFrame> {
            val o: Offset<MySelfFrame> = builder.endTable()
            return o
        }
    }
}

typealias MySelfFrameOffsetArray = OffsetArray<MySelfFrame>

inline fun MySelfFrameOffsetArray(size: Int, crossinline call: (Int) -> Offset<MySelfFrame>): MySelfFrameOffsetArray =
    MySelfFrameOffsetArray(IntArray(size) { call(it).value })
