include "base.fbs";
include "ffi_rpc.fbs";
namespace net_discovery;

attribute NetDiscovery;

attribute NetDiscoveryFfiRpcIn;
attribute NetDiscoveryFfiRpcOut;
attribute NetDiscoveryCallback;

table DnsTerminal {
    id: base.UlidBytes;
    parter_id: base.PartnerId;
    terminal_id: base.TerminalId;
    host_name: string;
    ip_v4: uint32;
    port_v4: uint16;
    ip_v6: uint64;
    port_v6: uint16;
    key: base.X25519Public;
}

table DiscoveryFrame {
    header: base.Header;
    bytes: [byte];
}

//
table Hi(NetDiscovery) {
    // 消息的唯一标识
    id: base.UlidBytes;
    dns_terminal: DnsTerminal;
}

table HiRecv(NetDiscoveryCallback) {
    id: base.UlidBytes;
    hi_id: base.UlidBytes;
    dns_terminal: DnsTerminal;
}

table QueryDnsTerminalOut(NetDiscoveryFfiRpcOut) {
    id: base.UlidBytes;
    in_id: base.UlidBytes;
    dns_terminal: DnsTerminal;
}
// query parameters just send request, dont return partners, the result will get from the "FfiRpcCallback"
table QueryDnsTerminalIn(NetDiscoveryFfiRpcIn:"QueryDnsTerminalOut") {
    id: base.UlidBytes;
}

table QueryPartnersOut(NetDiscoveryFfiRpcOut) {
    id: base.UlidBytes;
    in_id: base.UlidBytes;
    dns_partners: [DnsTerminal];
}
// query parameters just send request, dont return partners, the result will get from the "FfiRpcCallback"
table QueryPartnersIn(NetDiscoveryFfiRpcIn:"QueryPartnersOut") {
    id: base.UlidBytes;
    terminal: DnsTerminal;
}

root_type DiscoveryFrame;

