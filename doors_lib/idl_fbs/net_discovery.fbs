include "base.fbs";
// include "ffi_rpc.fbs";
namespace net_discovery;

attribute NetDiscovery;

attribute NetDiscoveryFfiRpcIn;
attribute NetDiscoveryFfiRpcOut;
attribute NetDiscoveryCallback;

table DnsTerminal {
    partner_id: base.PartnerId;
    terminal_id: base.TerminalId;
    key: base.X25519Public;
    host_name: string;
    show_name: string;
    net_interfaces: [NetInterface];
}

table NetInterface {
    ip_v4: uint32;
    port_v4: uint16;
    ip_v6_global: base.Ipv6;
    port_v6: uint16;
    ip_v6_temporary: base.Ipv6;
    ip_v6_link_local: base.Ipv6;
    // index of netinterface
    index_netinterface: uint32;
    ip_v6_unique_local: base.Ipv6;
    name: string;
    mac_address: string;
}

table HiFrame {
    header: base.Header;
    hi: Hi;
}

//
table Hi(NetDiscovery,NetDiscoveryCallback) {
    id: base.UlidBytes;
    dns_terminal: DnsTerminal;
    show_name: string;
}

table MySelfFrame {
    header: base.Header;
    my_self: MySelf;
}
struct MySelf{
    id: base.UlidBytes;
}

table DataSelfFrame {
    header: base.Header;
    data_self: DataSelf;
}
table DataSelf{
    id: base.UlidBytes;
    req_id: base.UlidBytes;
    dns_terminal: DnsTerminal;
    error_info: base.ErrorInfo;
}

enum NetDiscoveryType: uint32{
    none = 0,
    hi = 1,
    // the self is keyword, so add "my_"
    my_self = 2,
    data_self = 3,
}
