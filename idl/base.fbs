//namespace idl;

enum FrameType:int16{
    Message = 0, //发送消息
    MessageAck = 1, //发送消息的响应

    OnLine = 100, //parter的上线
    OnLineAck = 101,//响应,
}

//使用int 128来存放uuid, 由于部分语言不支持int128,所以后byte来存放
//它也可以使用来存放public key
//在内存直接转换时，如果主机的字节序为大端，需要转换字节序
//flatbuffers使用小端字节序
struct Int128{
    i1: byte;
    i2: byte;
    i3: byte;
    i4: byte;
    i5: byte;
    i6: byte;
    i7: byte;
    i8: byte;
}

struct Timestamp{
    ts: int64;
}

table Frame{
    header: Header;
    bytes: [byte];
}

struct Header{
    len:int32;
    type: FrameType;
    version: int16;
    from_id: Int128;
    to_id: Int128;
    forward_id: Int128;
}

table MessageBody{
    //message id
    id: Int128;
    from_id: Int128;
    // message timestamp
    ts: Timestamp;
    text: string;
}

table Message{
    header: Header;
    body: MessageBody;
}

//确认收到消息
table MessageAck{
    header: Header;
    //message id
    id: Int128;
    // message timestamp
    ts: Timestamp;
}
